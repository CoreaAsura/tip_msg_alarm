name: TIP Alert

on:
  schedule:
    - cron: '0 */2 * * *'  # 매 2시간마다 실행
  workflow_dispatch:

jobs:
  run-tip-alert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run TIP alert
        env:
          SPACETRACK_EMAIL: ${{ secrets.SPACETRACK_EMAIL }}
          SPACETRACK_PASSWORD: ${{ secrets.SPACETRACK_PASSWORD }}
          SMTP_EMAIL: ${{ secrets.SMTP_EMAIL }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          ALERT_RECIPIENT: ${{ secrets.ALERT_RECIPIENT }}
        run: |
          python -c "
          from fetch_tip import fetch_tip_messages
          from email_alert import send_email_alert
          import pandas as pd
          from datetime import datetime, timedelta

          fetch_tip_messages('${{ secrets.SPACETRACK_EMAIL }}', '${{ secrets.SPACETRACK_PASSWORD }}', 'data/tip_new.csv')
          df = pd.read_csv('data/tip_new.csv')
          df['MSG_EPOCH'] = pd.to_datetime(df['MSG_EPOCH'], errors='coerce', utc=True)
          recent = df[df['MSG_EPOCH'] >= datetime.utcnow() - timedelta(hours=2)]
          if not recent.empty:
              send_email_alert('${{ secrets.SMTP_EMAIL }}', '${{ secrets.SMTP_PASSWORD }}', '${{ secrets.ALERT_RECIPIENT }}', len(recent), 'https://your-streamlit-app-url/data/tip_new.csv')
          "
